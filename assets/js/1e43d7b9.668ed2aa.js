"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4226],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return c}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(r),c=o,h=m["".concat(s,".").concat(c)]||m[c]||d[c]||a;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function c(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6063:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],p={title:"2021-18 Weekly Report",author:"Prnyself",author_url:"https://github.com/Prnyself",tags:["updates","weekly-report"]},s=void 0,l={permalink:"/blog/2021/05/08/weekly-report",editUrl:"https://github.com/beyondstorage/site/edit/master/blog/2021-05-08-weekly-report.md",source:"@site/blog/2021-05-08-weekly-report.md",title:"2021-18 Weekly Report",description:"Hello everyone, here is the weekly report for BeyondStorage, range from 2021-05-06 to 2021-05-08.",date:"2021-05-08T00:00:00.000Z",formattedDate:"May 8, 2021",tags:[{label:"updates",permalink:"/blog/tags/updates"},{label:"weekly-report",permalink:"/blog/tags/weekly-report"}],readingTime:1.985,truncated:!0,authors:[{name:"Prnyself",url:"https://github.com/Prnyself"}],prevItem:{title:"2021-19 Weekly Report",permalink:"/blog/2021/05/14/weekly-report"},nextItem:{title:"2021-17 Weekly Report",permalink:"/blog/2021/04/30/weekly-report"}},u={authorsImageUrls:[void 0]},d=[{value:"Library",id:"library",children:[{value:"Appender Support",id:"appender-support",children:[]},{value:"Idempotent Storager Delete Operation",id:"idempotent-storager-delete-operation",children:[]},{value:"Additional Error Specification",id:"additional-error-specification",children:[]},{value:"Service Registry Support",id:"service-registry-support",children:[]},{value:"Add CreateDir Operation",id:"add-createdir-operation",children:[]}]},{value:"Community",id:"community",children:[{value:"Summer 2021 of Open Source Promotion Plan",id:"summer-2021-of-open-source-promotion-plan",children:[]}]}],m={toc:d};function c(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Hello everyone, here is the weekly report for ",(0,a.kt)("a",{parentName:"p",href:"https://beyondstorage.io"},"BeyondStorage"),", range from 2021-05-06 to 2021-05-08."),(0,a.kt)("p",null,"Due to the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/International_Workers%27_Day"},"International Workers' Day"),", we only have three\nworkdays this week. However, we still made lots of effort and managed to get some results."),(0,a.kt)("h2",{id:"library"},"Library"),(0,a.kt)("h3",{id:"appender-support"},"Appender Support"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Appender")," is used to append content to the tail of file."),(0,a.kt)("p",null,"This week, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JinnyYi"},"@JinnyYi")," finished implement appender support\nin ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/529"},"Implement Appender Support"),". Great work!"),(0,a.kt)("h3",{id:"idempotent-storager-delete-operation"},"Idempotent Storager Delete Operation"),(0,a.kt)("p",null,"We use ",(0,a.kt)("inlineCode",{parentName:"p"},"Delete")," to handle all object delete operations, but their behavior is not unified and well-defined."),(0,a.kt)("p",null,"So ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," made a\nproposal: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/46-idempotent-delete.md"},"GSP-46: Idempotent Storager Delete Operation"),"\nfor this, and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JinnyYi"},"@JinnyYi")," is now leading the implementation."),(0,a.kt)("p",null,"For more details, please refer\nto ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/554"},"Implement GSP-46: Idempotent Storager Delete Operation"),"."),(0,a.kt)("h3",{id:"additional-error-specification"},"Additional Error Specification"),(0,a.kt)("p",null,"In this week, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxchan"},"@xxchan")," has finished his first\nproposal: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/47-additional-error-specification.md"},"GSP-47: Additional Error Specification"),"\nin our team! Congratulations!"),(0,a.kt)("p",null,"After a study of our existing implementations in different services, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxchan"},"@xxchan")," did a great job for this proposal, which\nis designed to offer users unified experience when handle errors with ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage"),"."),(0,a.kt)("p",null,"For more details, please refer\nto ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/558"},"Implement GSP-47: Additional Error Specification"),"."),(0,a.kt)("h3",{id:"service-registry-support"},"Service Registry Support"),(0,a.kt)("p",null,"For now, every service implement the function like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func New(pairs ...typ.Pair) (typ.Servicer, typ.Storager, error) {}\nfunc NewServicer(ps ...types.Pair) (types.Servicer, error) {}\nfunc NewStorager(ps ...types.Pair) (types.Storager, error) {}\n")),(0,a.kt)("p",null,"Users need to handle types by themselves."),(0,a.kt)("p",null,"So ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," made a\nproposal: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/48-service-registry.md"},"GSP-48: Service Registry"),"\nto refactor the functions which make it easier to init a ",(0,a.kt)("inlineCode",{parentName:"p"},"Storager"),"."),(0,a.kt)("p",null,"The proposal is still a draft and not implemented yet."),(0,a.kt)("h3",{id:"add-createdir-operation"},"Add CreateDir Operation"),(0,a.kt)("p",null,"Applications need the ability to create a directory, and for now we did not offer a unified way to handle this."),(0,a.kt)("p",null,"So ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," made a\nproposal: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/49-add-create-dir-operation.md"},"GSP-49: Add CreateDir Operation"),"\nto allow user create a directory in the same way."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/blob/master/types/operation.generated.go#L166"},(0,a.kt)("inlineCode",{parentName:"a"},"Direr")," interface")," has been\nadded in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage"),", and more implementations in different services is now ",(0,a.kt)("strong",{parentName:"p"},"help wanted"),". You are welcome to make\nyour own PR for this."),(0,a.kt)("p",null,"For more details, please refer\nto ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/560"},"Implement GSP-49 Add CreateDir Operation"),"."),(0,a.kt)("h2",{id:"community"},"Community"),(0,a.kt)("h3",{id:"summer-2021-of-open-source-promotion-plan"},"Summer 2021 of Open Source Promotion Plan"),(0,a.kt)("p",null,"So far, over 30 students have shown their interest in our projects. You are welcome to keep an eye on our\nforum: ",(0,a.kt)("a",{parentName:"p",href:"https://forum.beyondstorage.io/"},"https://forum.beyondstorage.io/"),", where all event-related announcements will be posted."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://beyondstorage.io/community/events/ospp-summer-2021"},"https://beyondstorage.io/community/events/ospp-summer-2021"),"."),(0,a.kt)("hr",null))}c.isMDXComponent=!0}}]);