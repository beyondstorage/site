"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5427],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return r?n.createElement(h,a(a({ref:t},p),{},{components:r})):n.createElement(h,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5545:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={title:"Contributor Guide",sidebar_position:2},s=void 0,u={unversionedId:"contributor-guide",id:"contributor-guide",isDocsHomePage:!1,title:"Contributor Guide",description:"Submit an issue",source:"@site/docs/general/contributor-guide.md",sourceDirName:".",slug:"/contributor-guide",permalink:"/docs/general/contributor-guide",editUrl:"https://github.com/beyondstorage/site/edit/master/docs/general/contributor-guide.md",tags:[],version:"current",lastUpdatedBy:"Xuanwo",lastUpdatedAt:1627375258,formattedLastUpdatedAt:"7/27/2021",sidebarPosition:2,frontMatter:{title:"Contributor Guide",sidebar_position:2},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/general/index"}},p=[{value:"Submit an issue",id:"submit-an-issue",children:[]},{value:"Developer Flow",id:"developer-flow",children:[{value:"Fork repo",id:"fork-repo",children:[]},{value:"Choose an issue",id:"choose-an-issue",children:[]},{value:"Create your branch",id:"create-your-branch",children:[]},{value:"Coding",id:"coding",children:[]},{value:"Submit PR",id:"submit-pr",children:[]}]},{value:"Notice",id:"notice",children:[]}],c={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"submit-an-issue"},"Submit an issue"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Before submitting your issues, please go through a comprehensive search to make sure the problem cannot be solved just by searching."),(0,i.kt)("li",{parentName:"ol"},"Check the Issue List to make sure the problem is not repeated."),(0,i.kt)("li",{parentName:"ol"},"Create a new issue and choose the type of issue."),(0,i.kt)("li",{parentName:"ol"},"Define the issue with a clear and descriptive title."),(0,i.kt)("li",{parentName:"ol"},"Fill in necessary information according to the template."),(0,i.kt)("li",{parentName:"ol"},"Choose a label after the issue is created."),(0,i.kt)("li",{parentName:"ol"},"Please pay attention to your issue, you may need to provide more information during discussion.")),(0,i.kt)("h2",{id:"developer-flow"},"Developer Flow"),(0,i.kt)("h3",{id:"fork-repo"},"Fork repo"),(0,i.kt)("p",null,"Fork the BeyondStorage repo to your repo to work, then setting proper upstream."),(0,i.kt)("p",null,"Take ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage")," as an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# Clone the forked repo to local, replace the username with your github login.\ngit clone git@github.com:<username>/go-storage.git\n# Setup beyondstorage/go-storage as a new remote called upstream.\ngit remote add upstream git@github.com:beyondstorage/go-storage.git\n")),(0,i.kt)("h3",{id:"choose-an-issue"},"Choose an issue"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Please choose your target issue. If it is a new issue discovered or a new function enhancement to offer, please create an issue and set the right label for it."),(0,i.kt)("li",{parentName:"ol"},"After choosing the relevant issue, please reply with a deadline to indicate that you are working on it."),(0,i.kt)("li",{parentName:"ol"},"Depends on your working on projects, please ping different groups to give you feedback about your PR or issue in time.")),(0,i.kt)("p",null,"For go-storage related projects (including ",(0,i.kt)("inlineCode",{parentName:"p"},"go-storage")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"go-service-*"),"):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@go-storage-maintainer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@go-storage-committer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@go-storage-reviewer"))),(0,i.kt)("p",null,"For ",(0,i.kt)("inlineCode",{parentName:"p"},"BeyondTP"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@beyond-tp-maintainer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@beyond-tp-committer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@beyond-tp-reviewer"))),(0,i.kt)("p",null,"For other projects, there are no dedicated teams responsible for, our community members will try our best."),(0,i.kt)("h3",{id:"create-your-branch"},"Create your branch"),(0,i.kt)("p",null,"Switch to your forked master branch, pull codes from upstream, then create a new branch."),(0,i.kt)("p",null,"Notice: ",(0,i.kt)("strong",{parentName:"p"},"Every time you try to fix an issue, you should update the upstream and checkout from the master branch to make sure your code is up to date.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout master\ngit pull upstream master\ngit checkout -b IssueNo\n")),(0,i.kt)("h3",{id:"coding"},"Coding"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Please obey the Code of Conduct during the process of development and finish the check before submitting the pull request."),(0,i.kt)("li",{parentName:"ol"},"Then push codes to your fork repo.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git add modified-file-names\ngit commit -m 'commit message'\ngit push origin <IssueNo>\n")),(0,i.kt)("h3",{id:"submit-pr"},"Submit PR"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Send a pull request to the master branch."),(0,i.kt)("li",{parentName:"ol"},"Make sure that the pull request title has a semantic prefix like ",(0,i.kt)("inlineCode",{parentName:"li"},"fix:")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"feat:")," or any other ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/commitizen/conventional-commit-types/blob/master/index.json"},"conventional commit types"),"."),(0,i.kt)("li",{parentName:"ol"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"fix #xxx")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"close #xxx")," in PR description to link to the related issues."),(0,i.kt)("li",{parentName:"ol"},"The mentor will do a code review before discussing some details (including the design, the implementation, and the performance) with you."),(0,i.kt)("li",{parentName:"ol"},"Then congratulate you to be an official contributor of BeyondStorage.")),(0,i.kt)("h2",{id:"notice"},"Notice"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Please note that to show your ID in the contributor list, please DO NOT forget to set the configurations below:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'git config --global user.name "username"\ngit config --global user.email "mail address"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Please don't do a force push."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We will use ",(0,i.kt)("inlineCode",{parentName:"li"},"squash merging")," for all our projects, so there is no need to do a force push to re-organize the commit history."),(0,i.kt)("li",{parentName:"ul"},"Besides, force push makes it hard for the reviewer to track the changes.")))),(0,i.kt)("hr",null),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This guide is highly inspired by ",(0,i.kt)("a",{parentName:"p",href:"https://apisix.apache.org/docs/general/contributor-guide"},"Apache APISIX"))))}d.isMDXComponent=!0}}]);