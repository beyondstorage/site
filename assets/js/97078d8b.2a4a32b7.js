"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5242],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return c}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),l=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(r),c=n,h=m["".concat(p,".").concat(c)]||m[c]||u[c]||a;return r?o.createElement(h,i(i({ref:t},d),{},{components:r})):o.createElement(h,i({ref:t},d))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2776:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],s={title:"2021-27 Weekly Report",author:"Prnyself",author_url:"https://github.com/Prnyself",tags:["updates","weekly-report"]},p=void 0,l={permalink:"/blog/2021/07/09/weekly-report",editUrl:"https://github.com/beyondstorage/site/edit/master/blog/2021-07-09-weekly-report.md",source:"@site/blog/2021-07-09-weekly-report.md",title:"2021-27 Weekly Report",description:"Hello everyone, here is the weekly report for [BeyondStorage], range from 2021-07-05 to 2021-07-09.",date:"2021-07-09T00:00:00.000Z",formattedDate:"July 9, 2021",tags:[{label:"updates",permalink:"/blog/tags/updates"},{label:"weekly-report",permalink:"/blog/tags/weekly-report"}],readingTime:3.36,truncated:!0,authors:[{name:"Prnyself",url:"https://github.com/Prnyself"}],prevItem:{title:"2021-29 Weekly Report",permalink:"/blog/2021/07/26/weekly-report"},nextItem:{title:"2021-26 Weekly Report",permalink:"/blog/2021/07/02/weekly-report"}},d={authorsImageUrls:[void 0]},u=[{value:"Application",id:"application",children:[{value:"BeyondTeleport",id:"beyondteleport",children:[]}]},{value:"Proposal Updates",id:"proposal-updates",children:[{value:"DMP-110: Refactor Task Distribute",id:"dmp-110-refactor-task-distribute",children:[]},{value:"Implement GSP-127: Add ServiceInternal and RequestThrottled Errors",id:"implement-gsp-127-add-serviceinternal-and-requestthrottled-errors",children:[]},{value:"GSP-134: Write Behavior Consistency",id:"gsp-134-write-behavior-consistency",children:[]},{value:"GSP-139: Split Specs",id:"gsp-139-split-specs",children:[]}]},{value:"Library",id:"library",children:[{value:"Deprecated Fields and Packages",id:"deprecated-fields-and-packages",children:[]},{value:"New Repo: setup-hdfs",id:"new-repo-setup-hdfs",children:[]},{value:"Add uint64 Support in definitions",id:"add-uint64-support-in-definitions",children:[]},{value:"Add codecov",id:"add-codecov",children:[]}]},{value:"Community",id:"community",children:[{value:"Forum UI Design",id:"forum-ui-design",children:[]},{value:"Member Promotion",id:"member-promotion",children:[]},{value:"Summer 2021 of Open Source Promotion Plan",id:"summer-2021-of-open-source-promotion-plan",children:[]}]}],m={toc:u};function c(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Hello everyone, here is the weekly report for ",(0,a.kt)("a",{parentName:"p",href:"https://beyondstorage.io"},"BeyondStorage"),", range from 2021-07-05 to 2021-07-09."),(0,a.kt)("h2",{id:"application"},"Application"),(0,a.kt)("h3",{id:"beyondteleport"},"BeyondTeleport"),(0,a.kt)("p",null,"Several days ago, we submitted an issue on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/beyond-tp/issues/97"},"rename the project dm"),".\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," proposed a name list, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"byteport"),(0,a.kt)("li",{parentName:"ul"},"bytesync"),(0,a.kt)("li",{parentName:"ul"},"beyond data migration"),(0,a.kt)("li",{parentName:"ul"},"beyond migration")),(0,a.kt)("p",null,"After a discussion, finally we choose to use ",(0,a.kt)("inlineCode",{parentName:"p"},"BeyondTP"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"project name: ",(0,a.kt)("inlineCode",{parentName:"li"},"beyond-tp")),(0,a.kt)("li",{parentName:"ul"},"normal name: ",(0,a.kt)("inlineCode",{parentName:"li"},"BeyondTP")),(0,a.kt)("li",{parentName:"ul"},"complete name: ",(0,a.kt)("inlineCode",{parentName:"li"},"BeyondTeleport"))),(0,a.kt)("p",null,"The implementation has already been finished by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/beyond-tp/pull/116"},"Rename dm into beyondtp"),",\nand for more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/beyond-tp/issues/97"},"https://github.com/beyondstorage/beyond-tp/issues/97"),"."),(0,a.kt)("h2",{id:"proposal-updates"},"Proposal Updates"),(0,a.kt)("p",null,"This week, we have the following proposal updates."),(0,a.kt)("h3",{id:"dmp-110-refactor-task-distribute"},"DMP-110: Refactor Task Distribute"),(0,a.kt)("p",null,"For now, we use for-loop to monitor task submitting, and then distribute the task into staffs. We need an elegant way to monitor task submitting."),(0,a.kt)("p",null,"So ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Prnyself"},"@Prnyself")," proposed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/dm/pull/110"},"DMP-110")," to refactor the process of task distribution in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/beyond-tp"},"beyond-tp"),"."),(0,a.kt)("p",null,"This proposal is still unimplemented, any opinions or ideas are welcome."),(0,a.kt)("h3",{id:"implement-gsp-127-add-serviceinternal-and-requestthrottled-errors"},"Implement GSP-127: Add ServiceInternal and RequestThrottled Errors"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/blob/master/docs/rfcs/127-add-serviceinternel-and-requestthrottled-errors.md"},"GSP-127"),"\nintends to add two global error codes, ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrServiceInternal")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrRequestThrottled"),",\nso that users can retry only them instead of all errors in HTTP-based services."),(0,a.kt)("p",null,"Now it is implemented by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/junaire"},"@junaire")," by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/616"},"services: Implement GSP-127: Add ServiceInternal and RequestThrottled Errors"),"."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/612"},"Tracking Issue for GSP-127: Add ServiceInternel and RequestThrottled Errors"),"."),(0,a.kt)("h3",{id:"gsp-134-write-behavior-consistency"},"GSP-134: Write Behavior Consistency"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/blob/master/docs/rfcs/134-write-behavior-consistency.md"},"GSP-134"),"\nintends to keep write related operations' behavior consistency, by declare:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"All write operations SHOULD NOT return an error as the object exists."),(0,a.kt)("li",{parentName:"ul"},"All successful write operations SHOULD be complete")),(0,a.kt)("p",null,"This proposal is still in developing, for more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/624"},"Tracking issue for GSP-134: Write Behavior Consistency"),"."),(0,a.kt)("h3",{id:"gsp-139-split-specs"},"GSP-139: Split Specs"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/blob/master/docs/rfcs/139-split-specs.md"},"GSP-139"),"\nintends to split ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs"},"specs")," into different repos, to fit the new model of community permission."),(0,a.kt)("p",null,"It has now been implemented by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/652"},"cmd: Move definitions here as described in GSP-139")," and\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/628"},"docs: Move rfcs and spec here as required in GSP-139"),"."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/627"},"Tracking issue for GSP-139: Split Specs"),"."),(0,a.kt)("h2",{id:"library"},"Library"),(0,a.kt)("h3",{id:"deprecated-fields-and-packages"},"Deprecated Fields and Packages"),(0,a.kt)("p",null,"With the updating of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage"),", some fields and packages are marked ",(0,a.kt)("strong",{parentName:"p"},"deprecated")," in last several versions."),(0,a.kt)("p",null,"After a few updating, we decided to remove them, which has already been implemented by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JinnyYi"},"@JinnyYi"),"."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/619"},"Remove deprecated fields"),"\nand ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/621"},"Remove deprecated package pkg/endpoint"),"."),(0,a.kt)("h3",{id:"new-repo-setup-hdfs"},"New Repo: setup-hdfs"),(0,a.kt)("p",null,"To make test in GitHub action more convenient, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," created this new repo: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/setup-hdfs"},"setup-hdfs"),"."),(0,a.kt)("p",null,"You can easily set up Apache Hadoop/HDFS in GitHub Action workflows by introducing this, like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"steps:\n  - uses: actions/setup-python@v2\n    with:\n      python-version: '3.8'\n  - uses: actions/setup-java@v1\n    with:\n      java-version: '11'\n\n  - uses: beyondstorage/setup-hdfs@master\n    with:\n      hdfs-version: '3.3.1'\n\n  - run: curl ${namenode-addr}\n")),(0,a.kt)("p",null,"This is also available on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/setup-apache-hdfs"},"GitHub marketplace")," now."),(0,a.kt)("h3",{id:"add-uint64-support-in-definitions"},"Add uint64 Support in definitions"),(0,a.kt)("p",null,"We generate codes in ",(0,a.kt)("inlineCode",{parentName:"p"},"cmd/definition")," in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage"),". In type map, we defined the transfer of different types,\nwhich is lack of ",(0,a.kt)("inlineCode",{parentName:"p"},"uint64"),"."),(0,a.kt)("p",null,"So ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/zu1k"},"@zu1k")," submitted a PR: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/615"},"definitions: Add support for type uint64"),"\nto fix this. Nicely done!"),(0,a.kt)("h3",{id:"add-codecov"},"Add codecov"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://codecov.io"},"Codecov")," is a tool to ensure our code quality by checking the code coverage by tests."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," introduced it to increase the test coverage as tracked in issue: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/620"},"Increase code coverage"),"."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/pull/622"},"ci: Add codecov in unittests"),"."),(0,a.kt)("h2",{id:"community"},"Community"),(0,a.kt)("h3",{id:"forum-ui-design"},"Forum UI Design"),(0,a.kt)("p",null,"We use ",(0,a.kt)("a",{parentName:"p",href:"https://forum.beyondstorage.io"},"https://forum.beyondstorage.io")," as our forum, and now our new forum theme UI is in designing!"),(0,a.kt)("p",null,"The draft is ",(0,a.kt)("a",{parentName:"p",href:"https://www.figma.com/file/AqHxMvbAccGQM5NtvQEGCn/BeyondStorage.io?node-id=23%3A0"},"here"),",\nplease feel free to submit your opinion."),(0,a.kt)("h3",{id:"member-promotion"},"Member Promotion"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/zhandichn"},"@zhangdichn")," has been nominated as ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/beyond-tp"},"beyond-tp")," committer. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/community/pull/10"},"https://github.com/beyondstorage/community/pull/10")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/zu1k"},"@zu1k")," has been nominated as ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage")," reviewer. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/community/pull/13"},"https://github.com/beyondstorage/community/pull/13")),(0,a.kt)("p",null,"Congratulations!"),(0,a.kt)("h3",{id:"summer-2021-of-open-source-promotion-plan"},"Summer 2021 of Open Source Promotion Plan"),(0,a.kt)("p",null,"Projects are all in heavy developing, and some projects has already got points. Here are PRs list:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/beyondstorage/go-service-ipfs"},"go-service-ipfs"),": ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/beyondstorage/go-service-ipfs/pull/3"},"Implement go-storage Storager")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/zu1k"},"@zu1k")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/beyondstorage/go-service-minio"},"go-service-minio"),": ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/beyondstorage/go-service-minio/pull/6"},"Initial implement on Servicer and Storager")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/aeinrw"},"@aeinrw")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/beyondstorage/go-service-gdrive"},"go-service-gdrive"),": ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/beyondstorage/go-service-gdrive/pull/5"},"Implement storager")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/junaire"},"@junaire"))),(0,a.kt)("p",null,"Let's looking forward more outcomes!"),(0,a.kt)("hr",null))}c.isMDXComponent=!0}}]);