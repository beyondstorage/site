"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2953],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var i=2;i<a;i++)c[i]=n[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2126:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),c=["components"],l={},s="stat",i={unversionedId:"commands/stat",id:"commands/stat",isDocsHomePage:!1,title:"stat",description:"BeyondCTL support  get file or storage infos.",source:"@site/docs/beyond-ctl/commands/stat.md",sourceDirName:"commands",slug:"/commands/stat",permalink:"/docs/beyond-ctl/commands/stat",editUrl:"https://github.com/beyondstorage/site/edit/master/docs/beyond-ctl/commands/stat.md",tags:[],version:"current",lastUpdatedBy:"zhouyang",lastUpdatedAt:1660215943,formattedLastUpdatedAt:"8/11/2022",frontMatter:{},sidebar:"docs",previous:{title:"sign",permalink:"/docs/beyond-ctl/commands/sign"},next:{title:"tee",permalink:"/docs/beyond-ctl/commands/tee"}},p=[{value:"Stat file",id:"stat-file",children:[]},{value:"Stat storage",id:"stat-storage",children:[]},{value:"Control concurrency via Workers",id:"control-concurrency-via-workers",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"stat"},"stat"),(0,a.kt)("p",null,"BeyondCTL support  get file or storage infos."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"NAME:\n   byctl stat - get file or storage info\n\nUSAGE:\n   byctl stat [command options] [source]\n\nOPTIONS:\n   --workers value         Specify the workers number (default: 4) [$BEYOND_CTL_WORKERS]\n   --json                  Output in json format (default: false)\n   --help, -h              show help (default: false)\n")),(0,a.kt)("h2",{id:"stat-file"},"Stat file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"byctl stat example:/test.jpg\n")),(0,a.kt)("p",null,"The above command will output the basic information of the file ",(0,a.kt)("inlineCode",{parentName:"p"},"test.jpg")," in service ",(0,a.kt)("inlineCode",{parentName:"p"},"example"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'ID: path/to/workdir/test.jpg\nPath: test.jpg\nMode: Read\nLastModified: 2021-10-25 09:06:57 +0000 UTC\nEtag: "7e4611c52075590896dd26905ac0c4cf"\nContentType: image/jpeg\n\nSystemMetadata: \nStorageClass: STANDARD\nxxxxxxxxx: xxx\n\nUserMetadata: \nxxxx: xxxx\nxxx: xxx  \n')),(0,a.kt)("p",null,"If we need json output, we can do this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"byctl stat --json example:/test.jpg\n")),(0,a.kt)("h2",{id:"stat-storage"},"Stat storage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"byctl stat example:\n")),(0,a.kt)("p",null,"The above command will output basic information about the storager of the ",(0,a.kt)("inlineCode",{parentName:"p"},"example")," service(Added via profile, qingstor)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Service: qingstor\nBucketName: test-stat\nWorkDir: /path/to/workdir/\nLocation: sh1a\n")),(0,a.kt)("p",null,"If we need json output, we can do this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"byctl stat --json example:\n")),(0,a.kt)("h2",{id:"control-concurrency-via-workers"},"Control concurrency via Workers"),(0,a.kt)("p",null,"BeyondCTL support concurrency stat be default. We can control the concurrent workers by ",(0,a.kt)("inlineCode",{parentName:"p"},"--workers"),"."),(0,a.kt)("p",null,"By default, we will have ",(0,a.kt)("inlineCode",{parentName:"p"},"4")," workers."),(0,a.kt)("p",null,"We can increase the workers number to ",(0,a.kt)("inlineCode",{parentName:"p"},"10")," via:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"byctl stat --workers=10 example:/test.jpg\n")))}d.isMDXComponent=!0}}]);