"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3727],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return d}});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=o.createContext({}),l=function(e){var r=o.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return o.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},m=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=n,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return t?o.createElement(h,s(s({ref:r},c),{},{components:t})):o.createElement(h,s({ref:r},c))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3849:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var o=t(7462),n=t(3366),a=(t(7294),t(3905)),s=["components"],i={title:"2021-22 Weekly Report",author:"JinnyYi",author_url:"https://github.com/JinnyYi",tags:["updates","weekly-report"]},p=void 0,l={permalink:"/blog/2021/06/04/weekly-report",editUrl:"https://github.com/beyondstorage/site/edit/master/blog/2021-06-04-weekly-report.md",source:"@site/blog/2021-06-04-weekly-report.md",title:"2021-22 Weekly Report",description:"Hello everyone, here is the weekly report for BeyondStorage, range from 2021-05-31 to 2021-06-04.",date:"2021-06-04T00:00:00.000Z",formattedDate:"June 4, 2021",tags:[{label:"updates",permalink:"/blog/tags/updates"},{label:"weekly-report",permalink:"/blog/tags/weekly-report"}],readingTime:1.695,truncated:!0,authors:[{name:"JinnyYi",url:"https://github.com/JinnyYi"}],prevItem:{title:"2021-23 Weekly Report",permalink:"/blog/2021/06/11/weekly-report"},nextItem:{title:"2021-21 Weekly Report",permalink:"/blog/2021/05/28/weekly-report"}},c={authorsImageUrls:[void 0]},u=[{value:"Library",id:"library",children:[{value:"Feature Gates",id:"feature-gates",children:[]},{value:"Parse Pairs from String",id:"parse-pairs-from-string",children:[]},{value:"Network Error and Retryable Server-side Errors",id:"network-error-and-retryable-server-side-errors",children:[]}]},{value:"Community",id:"community",children:[{value:"Summer 2021 of Open Source Promotion Plan",id:"summer-2021-of-open-source-promotion-plan",children:[]}]}],m={toc:u};function d(e){var r=e.components,t=(0,n.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Hello everyone, here is the weekly report for ",(0,a.kt)("a",{parentName:"p",href:"https://beyondstorage.io"},"BeyondStorage"),", range from 2021-05-31 to 2021-06-04."),(0,a.kt)("h2",{id:"library"},"Library"),(0,a.kt)("h3",{id:"feature-gates"},"Feature Gates"),(0,a.kt)("p",null,"As we mentioned in ",(0,a.kt)("a",{parentName:"p",href:"https://beyondstorage.io/blog/2021/05/28/weekly-report"},"last week's report"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Xuanwo"},"@Xuanwo")," proposed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/87-feature-gates.md"},"GSP-87: Feature Gates")," to handle behavior consistency for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage")," and implemented in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs"},"specs")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage"),". Based on these, all the basic implementation for different services are finished this week. Specific behaviors of interfaces in different services need further discussion."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage/issues/587"},"Implement GSP-87 Feature Gates"),"."),(0,a.kt)("h3",{id:"parse-pairs-from-string"},"Parse Pairs from String"),(0,a.kt)("p",null,"We had config strings like ",(0,a.kt)("inlineCode",{parentName:"p"},"s3://bucket_name?access_key=xxxx&secret_key=xxxx")," before but deprecated for some reasons. "),(0,a.kt)("p",null,"Passing string config is indeed more convenient, if not much. So ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxchan"},"@xxchan")," proposed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/pull/90"},"GSP-90: Parse Pairs from String")," to use a registry mechanism for parsing pairs."),(0,a.kt)("p",null,"To illustrate its feasibility, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxchan"},"@xxchan")," implemented it in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-service-qingstor"},"go-service-qingstor"),". In addition, he provided an alternative way which use a deserializer instead of implementing parse functions ourselves. You can track ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/pull/90#issuecomment-852415718"},"here")," for details."),(0,a.kt)("p",null,"This proposal is still in discussion, for more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/pull/90"},"GSP-90: Parse Pairs from String"),"."),(0,a.kt)("h3",{id:"network-error-and-retryable-server-side-errors"},"Network Error and Retryable Server-side Errors"),(0,a.kt)("p",null,"Currently, we use a function named ",(0,a.kt)("inlineCode",{parentName:"p"},"formatError")," in generated code to turn SDK errors into our errors, as defined in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/47-additional-error-specification.md"},"GSP-47"),". And introduced ",(0,a.kt)("inlineCode",{parentName:"p"},"InternalError")," to add support for recognizing errors defined in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/go-storage"},"go-storage")," in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/blob/master/rfcs/51-distinguish-errors-by-isaoserror.md"},"GSP-51"),"."),(0,a.kt)("p",null,"Network errors are common and should be expected. Besides, there's a common need to retry a network error. So we should provide network error codes."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxchan"},"@xxchan")," proposed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/pull/60"},"GSP-60: Network Error and Retryable Server-side Errors")," several days before to add the global error codes. A new conversation on the proposal came out this week. "),(0,a.kt)("p",null,"Please keep an eye on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/beyondstorage/specs/pull/60"},"GSP-60: Network Error and Retryable Server-side Errors")," to follow the progress."),(0,a.kt)("h2",{id:"community"},"Community"),(0,a.kt)("h3",{id:"summer-2021-of-open-source-promotion-plan"},"Summer 2021 of Open Source Promotion Plan"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://forum.beyondstorage.io/t/summer-2021-of-open-source-promotion-plan/22"},"Summer 2021 of Open Source Promotion Plan")," is now recruiting. We continued to receive some applications this week and all the applications are aggregating ",(0,a.kt)("a",{parentName:"p",href:"https://forum.beyondstorage.io/t/ospp-2021-application-aggregation/56"},"here"),"."),(0,a.kt)("p",null,"For more details, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://beyondstorage.io/community/events/ospp-summer-2021"},"https://beyondstorage.io/community/events/ospp-summer-2021"),"."))}d.isMDXComponent=!0}}]);